From 80361de13c570d34608db1d958c2444aad76991b Mon Sep 17 00:00:00 2001
From: nobody <nobody@github.com>
Date: Tue, 29 Dec 2020 23:00:00 +0800
Subject: [PATCH] Add NanoPi R4S support

---
 package/boot/uboot-rockchip/Makefile          |  42 +-
 ...9-Add-support-for-multiple-DDR-types.patch | 275 ++++++
 ...Add-support-for-FriendlyARM-NanoPi-R.patch | 411 --------
 ...-rk3399-Add-Nanopi-R4S-board-support.patch | 875 ++++++++++++++++++
 target/linux/rockchip/Makefile                |   3 +-
 .../armv8/base-files/etc/board.d/01_leds      |   8 +-
 .../armv8/base-files/etc/board.d/02_network   |   6 +-
 .../etc/hotplug.d/net/40-net-smp-affinity     |   5 +-
 target/linux/rockchip/image/armv8.mk          |  32 +-
 ...Add-support-for-FriendlyARM-NanoPi-R.patch | 226 -----
 ...-initial-signal-voltage-on-power-off.patch |  32 +
 ...ew-binding-to-specify-host-min-index.patch |  38 +
 ...ockchip-Add-Nanopi-R4S-board-support.patch | 239 +++++
 13 files changed, 1490 insertions(+), 702 deletions(-)
 create mode 100644 package/boot/uboot-rockchip/patches/200-ram-rk3399-Add-support-for-multiple-DDR-types.patch
 delete mode 100644 package/boot/uboot-rockchip/patches/200-rockchip-rk3399-Add-support-for-FriendlyARM-NanoPi-R.patch
 create mode 100644 package/boot/uboot-rockchip/patches/201-rockchip-rk3399-Add-Nanopi-R4S-board-support.patch
 delete mode 100644 target/linux/rockchip/patches-5.4/200-rockchip-rk3399-Add-support-for-FriendlyARM-NanoPi-R.patch
 create mode 100644 target/linux/rockchip/patches-5.4/300-mmc-core-set-initial-signal-voltage-on-power-off.patch
 create mode 100644 target/linux/rockchip/patches-5.4/301-mmc-add-new-binding-to-specify-host-min-index.patch
 create mode 100644 target/linux/rockchip/patches-5.4/302-arm64-dts-rockchip-Add-Nanopi-R4S-board-support.patch

diff --git a/package/boot/uboot-rockchip/Makefile b/package/boot/uboot-rockchip/Makefile
index 2f0004f34..ba56bc11a 100644
--- a/package/boot/uboot-rockchip/Makefile
+++ b/package/boot/uboot-rockchip/Makefile
@@ -38,52 +38,30 @@ endef
 
 # RK3399 boards
 
-define U-Boot/nanopi-r4s-1gb-rk3399
-  BUILD_SUBTARGET:=armv8
-  NAME:=NanoPi R4S 1GB
-  BUILD_DEVICES:= \
-    friendlyarm_nanopi-r4s-1gb
-  DEPENDS:=+PACKAGE_u-boot-nanopi-r4s-1gb-rk3399:arm-trusted-firmware-rockchip
-  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
-  ATF:=rk3399_bl31.elf
-endef
-
-define U-Boot/nanopi-r4s-4gb-rk3399
-  BUILD_SUBTARGET:=armv8
-  NAME:=NanoPi R4S 4GB
-  BUILD_DEVICES:= \
-    friendlyarm_nanopi-r4s-4gb
-  DEPENDS:=+PACKAGE_u-boot-nanopi-r4s-4gb-rk3399:arm-trusted-firmware-rockchip
-  PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
-  ATF:=rk3399_bl31.elf
-endef
-
-define U-Boot/rock-pi-4-rk3399
+define U-Boot/rockpro64-rk3399
   BUILD_SUBTARGET:=armv8
-  NAME:=Rock Pi 4
+  NAME:=RockPro64
   BUILD_DEVICES:= \
-    radxa_rock-pi-4
-  DEPENDS:=+PACKAGE_u-boot-rock-pi-4-rk3399:arm-trusted-firmware-rockchip
+    pine64_rockpro64
+  DEPENDS:=+PACKAGE_u-boot-rockpro64-rk3399:arm-trusted-firmware-rockchip
   PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
   ATF:=rk3399_bl31.elf
 endef
 
-define U-Boot/rockpro64-rk3399
+define U-Boot/nanopi-r4s-rk3399
   BUILD_SUBTARGET:=armv8
-  NAME:=RockPro64
+  NAME:=NanoPi R4S
   BUILD_DEVICES:= \
-    pine64_rockpro64
-  DEPENDS:=+PACKAGE_u-boot-rockpro64-rk3399:arm-trusted-firmware-rockchip
+    friendlyarm_nanopi-r4s
+  DEPENDS:=+PACKAGE_u-boot-nanopi-r4s-rk3399:arm-trusted-firmware-rockchip
   PKG_BUILD_DEPENDS:=arm-trusted-firmware-rockchip
   ATF:=rk3399_bl31.elf
 endef
 
 UBOOT_TARGETS := \
-  nanopi-r4s-1gb-rk3399 \
-  nanopi-r4s-4gb-rk3399 \
-  rock-pi-4-rk3399 \
   rockpro64-rk3399 \
-  nanopi-r2s-rk3328
+  nanopi-r2s-rk3328 \
+  nanopi-r4s-rk3399
 
 UBOOT_CONFIGURE_VARS += USE_PRIVATE_LIBGCC=yes
 
diff --git a/package/boot/uboot-rockchip/patches/200-ram-rk3399-Add-support-for-multiple-DDR-types.patch b/package/boot/uboot-rockchip/patches/200-ram-rk3399-Add-support-for-multiple-DDR-types.patch
new file mode 100644
index 000000000..011919d3f
--- /dev/null
+++ b/package/boot/uboot-rockchip/patches/200-ram-rk3399-Add-support-for-multiple-DDR-types.patch
@@ -0,0 +1,275 @@
+From bbd3327d47a29e9167f16826111a3502b37198de Mon Sep 17 00:00:00 2001
+From: hmz007 <hmz007@gmail.com>
+Date: Sat, 19 Dec 2020 19:39:14 +0800
+Subject: [PATCH 1/2] ram: rk3399: Add support for multiple DDR types
+
+Move rockchip,sdram-params to named subnode to include
+multiple sdram parameters, and then read the parameters
+(by subnode name, first subnode or current node) before
+rk3399_dmc_init().
+
+Signed-off-by: hmz007 <hmz007@gmail.com>
+---
+ arch/arm/dts/rk3399-sdram-ddr3-1333.dtsi      |  6 ++-
+ arch/arm/dts/rk3399-sdram-ddr3-1600.dtsi      |  5 +-
+ arch/arm/dts/rk3399-sdram-ddr3-1866.dtsi      |  6 ++-
+ .../arm/dts/rk3399-sdram-lpddr3-2GB-1600.dtsi |  3 ++
+ .../arm/dts/rk3399-sdram-lpddr3-4GB-1600.dtsi |  3 ++
+ .../rk3399-sdram-lpddr3-samsung-4GB-1866.dtsi |  3 ++
+ arch/arm/dts/rk3399-sdram-lpddr4-100.dtsi     |  3 ++
+ drivers/ram/rockchip/sdram_rk3399.c           | 49 +++++++++++++++----
+ 8 files changed, 64 insertions(+), 14 deletions(-)
+
+diff --git a/arch/arm/dts/rk3399-sdram-ddr3-1333.dtsi b/arch/arm/dts/rk3399-sdram-ddr3-1333.dtsi
+index 7fae249536..dad5b7fbd4 100644
+--- a/arch/arm/dts/rk3399-sdram-ddr3-1333.dtsi
++++ b/arch/arm/dts/rk3399-sdram-ddr3-1333.dtsi
+@@ -4,7 +4,9 @@
+  */
+ 
+ &dmc {
+-        rockchip,sdram-params = <
++	ddr3-1333 {
++	u-boot,dm-pre-reloc;
++	rockchip,sdram-params = <
+ 		0x1
+ 		0xa
+ 		0x3
+@@ -1536,5 +1538,5 @@
+ 		0x01010000
+ 		0x00000000
+ 	>;
++	};
+ };
+-
+diff --git a/arch/arm/dts/rk3399-sdram-ddr3-1600.dtsi b/arch/arm/dts/rk3399-sdram-ddr3-1600.dtsi
+index 23c7c34a9a..238f667a76 100644
+--- a/arch/arm/dts/rk3399-sdram-ddr3-1600.dtsi
++++ b/arch/arm/dts/rk3399-sdram-ddr3-1600.dtsi
+@@ -4,7 +4,9 @@
+  */
+ 
+ &dmc {
+-        rockchip,sdram-params = <
++	ddr3-1600 {
++	u-boot,dm-pre-reloc;
++	rockchip,sdram-params = <
+ 		0x1
+ 		0xa
+ 		0x3
+@@ -1536,4 +1538,5 @@
+ 		0x01010000
+ 		0x00000000
+ 	>;
++	};
+ };
+diff --git a/arch/arm/dts/rk3399-sdram-ddr3-1866.dtsi b/arch/arm/dts/rk3399-sdram-ddr3-1866.dtsi
+index ea029ca90a..7f6b95fe42 100644
+--- a/arch/arm/dts/rk3399-sdram-ddr3-1866.dtsi
++++ b/arch/arm/dts/rk3399-sdram-ddr3-1866.dtsi
+@@ -4,7 +4,9 @@
+  */
+ 
+ &dmc {
+-        rockchip,sdram-params = <
++	ddr3-1866 {
++	u-boot,dm-pre-reloc;
++	rockchip,sdram-params = <
+ 		0x1
+ 		0xa
+ 		0x3
+@@ -1536,5 +1538,5 @@
+ 		0x01010000
+ 		0x00000000
+ 	>;
++	};
+ };
+-
+diff --git a/arch/arm/dts/rk3399-sdram-lpddr3-2GB-1600.dtsi b/arch/arm/dts/rk3399-sdram-lpddr3-2GB-1600.dtsi
+index 7296dbb80e..a83564794e 100644
+--- a/arch/arm/dts/rk3399-sdram-lpddr3-2GB-1600.dtsi
++++ b/arch/arm/dts/rk3399-sdram-lpddr3-2GB-1600.dtsi
+@@ -5,6 +5,8 @@
+  */
+ 
+ &dmc {
++	lpddr3-2GB-1600 {
++	u-boot,dm-pre-reloc;
+ 	rockchip,sdram-params = <
+ 		0x1
+ 		0xa
+@@ -1537,4 +1539,5 @@
+ 		0x01010000
+ 		0x00000000
+ 	>;
++	};
+ };
+diff --git a/arch/arm/dts/rk3399-sdram-lpddr3-4GB-1600.dtsi b/arch/arm/dts/rk3399-sdram-lpddr3-4GB-1600.dtsi
+index bf429c21e4..537936c6fb 100644
+--- a/arch/arm/dts/rk3399-sdram-lpddr3-4GB-1600.dtsi
++++ b/arch/arm/dts/rk3399-sdram-lpddr3-4GB-1600.dtsi
+@@ -4,6 +4,8 @@
+  */
+ 
+ &dmc {
++	lpddr3-4GB-1600 {
++	u-boot,dm-pre-reloc;
+ 	rockchip,sdram-params = <
+ 		0x2
+ 		0xa
+@@ -1536,4 +1538,5 @@
+ 		0x01010000
+ 		0x00000000
+ 	>;
++	};
+ };
+diff --git a/arch/arm/dts/rk3399-sdram-lpddr3-samsung-4GB-1866.dtsi b/arch/arm/dts/rk3399-sdram-lpddr3-samsung-4GB-1866.dtsi
+index 96f459fd0b..a0acdb5add 100644
+--- a/arch/arm/dts/rk3399-sdram-lpddr3-samsung-4GB-1866.dtsi
++++ b/arch/arm/dts/rk3399-sdram-lpddr3-samsung-4GB-1866.dtsi
+@@ -4,6 +4,8 @@
+  */
+ 
+ &dmc {
++	lpddr3-samsung-4GB-1866 {
++	u-boot,dm-pre-reloc;
+ 	rockchip,sdram-params = <
+ 		0x2
+ 		0xa
+@@ -1543,4 +1545,5 @@
+ 		0x01010000	/* DENALI_PHY_957_DATA */
+ 		0x00000000	/* DENALI_PHY_958_DATA */
+ 	>;
++	};
+ };
+diff --git a/arch/arm/dts/rk3399-sdram-lpddr4-100.dtsi b/arch/arm/dts/rk3399-sdram-lpddr4-100.dtsi
+index f0c478d189..21d212236f 100644
+--- a/arch/arm/dts/rk3399-sdram-lpddr4-100.dtsi
++++ b/arch/arm/dts/rk3399-sdram-lpddr4-100.dtsi
+@@ -6,6 +6,8 @@
+  */
+ 
+ &dmc {
++	lpddr4-100 {
++	u-boot,dm-pre-reloc;
+ 	rockchip,sdram-params = <
+ 		0x2
+ 		0xa
+@@ -1538,4 +1540,5 @@
+ 		0x01010000
+ 		0x00000000
+ 	>;
++	};
+ };
+diff --git a/drivers/ram/rockchip/sdram_rk3399.c b/drivers/ram/rockchip/sdram_rk3399.c
+index 530c8a2f40..db30105989 100644
+--- a/drivers/ram/rockchip/sdram_rk3399.c
++++ b/drivers/ram/rockchip/sdram_rk3399.c
+@@ -1625,7 +1625,6 @@ static void set_ddr_stride(struct rk3399_pmusgrf_regs *pmusgrf, u32 stride)
+ 	rk_clrsetreg(&pmusgrf->soc_con4, 0x1f << 10, stride << 10);
+ }
+ 
+-#if !defined(CONFIG_RAM_RK3399_LPDDR4)
+ static int data_training_first(struct dram_info *dram, u32 channel, u8 rank,
+ 			       struct rk3399_sdram_params *params)
+ {
+@@ -1715,8 +1714,8 @@ void modify_param(const struct chan_info *chan,
+ 	clrsetbits_le32(&denali_pi_params[76], 0x1 << 24, 0x1 << 24);
+ 	clrsetbits_le32(&denali_pi_params[77], 0x1, 0x1);
+ }
+-#else
+ 
++#if defined(CONFIG_RAM_RK3399_LPDDR4)
+ struct rk3399_sdram_params dfs_cfgs_lpddr4[] = {
+ #include "sdram-rk3399-lpddr4-400.inc"
+ #include "sdram-rk3399-lpddr4-800.inc"
+@@ -3011,20 +3010,40 @@ static int sdram_init(struct dram_info *dram,
+ 	return 0;
+ }
+ 
++__weak const char *rk3399_get_ddrtype(void)
++{
++	return NULL;
++}
++
+ static int rk3399_dmc_ofdata_to_platdata(struct udevice *dev)
+ {
+ #if !CONFIG_IS_ENABLED(OF_PLATDATA)
+ 	struct rockchip_dmc_plat *plat = dev_get_platdata(dev);
++	ofnode node = { .np = NULL };
++	const char *name;
+ 	int ret;
+ 
+-	ret = dev_read_u32_array(dev, "rockchip,sdram-params",
+-				 (u32 *)&plat->sdram_params,
+-				 sizeof(plat->sdram_params) / sizeof(u32));
++	name = rk3399_get_ddrtype();
++	if (name)
++		node = dev_read_subnode(dev, name);
++	if (!ofnode_valid(node)) {
++		debug("Failed to read subnode %s\n", name);
++		node = dev_read_first_subnode(dev);
++	}
++
++	/* fallback to current node */
++	if (!ofnode_valid(node))
++		node = dev_ofnode(dev);
++
++	ret = ofnode_read_u32_array(node, "rockchip,sdram-params",
++				    (u32 *)&plat->sdram_params,
++				    sizeof(plat->sdram_params) / sizeof(u32));
+ 	if (ret) {
+ 		printf("%s: Cannot read rockchip,sdram-params %d\n",
+ 		       __func__, ret);
+ 		return ret;
+ 	}
++
+ 	ret = regmap_init_mem(dev_ofnode(dev), &plat->map);
+ 	if (ret)
+ 		printf("%s: regmap failed %d\n", __func__, ret);
+@@ -3051,18 +3070,20 @@ static int conv_of_platdata(struct udevice *dev)
+ #endif
+ 
+ static const struct sdram_rk3399_ops rk3399_ops = {
+-#if !defined(CONFIG_RAM_RK3399_LPDDR4)
+ 	.data_training_first = data_training_first,
+ 	.set_rate_index = switch_to_phy_index1,
+ 	.modify_param = modify_param,
+ 	.get_phy_index_params = get_phy_index_params,
+-#else
++};
++
++#if defined(CONFIG_RAM_RK3399_LPDDR4)
++static const struct sdram_rk3399_ops lpddr4_ops = {
+ 	.data_training_first = lpddr4_mr_detect,
+ 	.set_rate_index = lpddr4_set_rate,
+ 	.modify_param = lpddr4_modify_param,
+ 	.get_phy_index_params = lpddr4_get_phy_index_params,
+-#endif
+ };
++#endif
+ 
+ static int rk3399_dmc_init(struct udevice *dev)
+ {
+@@ -3081,7 +3102,17 @@ static int rk3399_dmc_init(struct udevice *dev)
+ 		return ret;
+ #endif
+ 
+-	priv->ops = &rk3399_ops;
++	if (params->base.dramtype == LPDDR4) {
++#if defined(CONFIG_RAM_RK3399_LPDDR4)
++		priv->ops = &lpddr4_ops;
++#else
++		printf("LPDDR4 support is disable\n");
++		return -EINVAL;
++#endif
++	} else {
++		priv->ops = &rk3399_ops;
++	}
++
+ 	priv->cic = syscon_get_first_range(ROCKCHIP_SYSCON_CIC);
+ 	priv->grf = syscon_get_first_range(ROCKCHIP_SYSCON_GRF);
+ 	priv->pmu = syscon_get_first_range(ROCKCHIP_SYSCON_PMU);
+-- 
+2.25.1
+
diff --git a/package/boot/uboot-rockchip/patches/200-rockchip-rk3399-Add-support-for-FriendlyARM-NanoPi-R.patch b/package/boot/uboot-rockchip/patches/200-rockchip-rk3399-Add-support-for-FriendlyARM-NanoPi-R.patch
deleted file mode 100644
index 57911fa12..000000000
--- a/package/boot/uboot-rockchip/patches/200-rockchip-rk3399-Add-support-for-FriendlyARM-NanoPi-R.patch
+++ /dev/null
@@ -1,411 +0,0 @@
-From 0aa583056cb1727fc09f4feca670d57634eb5605 Mon Sep 17 00:00:00 2001
-From: Tianling Shen <cnsztl@project-openwrt.eu.org>
-Date: Sat, 19 Dec 2020 11:49:33 +0000
-Subject: [PATCH] rockchip: rk3399: Add support for FriendlyARM NanoPi R4S
-
-This adds support for the NanoPi R4S from FriendlyArm.
-
-Rockchip RK3399 SoC
-1GB DDR3 or 4GB LPDDR4 RAM
-Gigabit Ethernet (WAN)
-Gigabit Ethernet (PCIe) (LAN)
-USB 3.0 Host Port x 2
-MicroSD slot
-Reset button
-WAN - LAN - SYS LED
-
-Signed-off-by: Tianling Shen <cnsztl@project-openwrt.eu.org>
-Co-authored-by: Marty Jones <mj8263788@gmail.com>
-Signed-off-by: Marty Jones <mj8263788@gmail.com>
----
- arch/arm/dts/Makefile                         |   2 +
- .../arm/dts/rk3399-nanopi-r4s-1gb-u-boot.dtsi |   9 ++
- arch/arm/dts/rk3399-nanopi-r4s-1gb.dts        |  27 +
- .../arm/dts/rk3399-nanopi-r4s-4gb-u-boot.dtsi |   9 ++
- arch/arm/dts/rk3399-nanopi-r4s-4gb.dts        |  27 +
- arch/arm/dts/rk3399-nanopi-r4s.dtsi           | 122 ++++++++++++++++++
- board/rockchip/evb_rk3399/MAINTAINERS         |  14 ++
- configs/nanopi-r4s-1gb-rk3399_defconfig       |  61 ++++++++
- configs/nanopi-r4s-4gb-rk3399_defconfig       |  62 ++++++++
- 9 files changed, 333 insertions(+)
- create mode 100644 arch/arm/dts/rk3399-nanopi-r4s-1gb-u-boot.dtsi
- create mode 100644 arch/arm/dts/rk3399-nanopi-r4s-1gb.dts
- create mode 100644 arch/arm/dts/rk3399-nanopi-r4s-4gb-u-boot.dtsi
- create mode 100644 arch/arm/dts/rk3399-nanopi-r4s-4gb.dts
- create mode 100644 arch/arm/dts/rk3399-nanopi-r4s.dtsi
- create mode 100644 configs/nanopi-r4s-1gb-rk3399_defconfig
- create mode 100644 configs/nanopi-r4s-4gb-rk3399_defconfig
-
---- a/arch/arm/dts/Makefile
-+++ b/arch/arm/dts/Makefile
-@@ -130,6 +130,8 @@ dtb-$(CONFIG_ROCKCHIP_RK3399) += \
- 	rk3399-nanopi-m4.dtb \
- 	rk3399-nanopi-m4-2gb.dtb \
- 	rk3399-nanopi-neo4.dtb \
-+	rk3399-nanopi-r4s-1gb.dtb \
-+	rk3399-nanopi-r4s-4gb.dtb \
- 	rk3399-orangepi.dtb \
- 	rk3399-pinebook-pro.dtb \
- 	rk3399-puma-haikou.dtb \
---- /dev/null
-+++ b/arch/arm/dts/rk3399-nanopi-r4s-1gb-u-boot.dtsi
-@@ -0,0 +1,9 @@
-+// SPDX-License-Identifier: GPL-2.0+
-+/*
-+ * (C) Copyright 2018-2019 Rockchip Electronics Co., Ltd
-+ * (C) Copyright 2020 Marty Jones <mj8263788@gmail.com>
-+ * (C) Copyright 2020 Tianling Shen <cnsztl@project-openwrt.eu.org>
-+ */
-+
-+#include "rk3399-nanopi4-u-boot.dtsi"
-+#include "rk3399-sdram-ddr3-1600.dtsi"
---- /dev/null
-+++ b/arch/arm/dts/rk3399-nanopi-r4s-1gb.dts
-@@ -0,0 +1,27 @@
-+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
-+
-+#include "rk3399-nanopi-r4s.dtsi"
-+
-+/ {
-+	model = "FriendlyElec NanoPi R4S (1GB)";
-+	compatible = "friendlyarm,nanopi-r4s-1gb", "rockchip,rk3399";
-+};
-+
-+&leds {
-+	/delete-node/ status;
-+
-+	lan_led: led-0 {
-+		gpios = <&gpio1 RK_PA1 GPIO_ACTIVE_HIGH>;
-+		label = "nanopi-r4s-1gb:green:lan";
-+	};
-+
-+	sys_led: led-1 {
-+ 		gpios = <&gpio0 RK_PB5 GPIO_ACTIVE_HIGH>;
-+		label = "nanopi-r4s-1gb:red:sys";
-+	};
-+
-+	wan_led: led-2 {
-+		gpios = <&gpio1 RK_PA0 GPIO_ACTIVE_HIGH>;
-+		label = "nanopi-r4s-1gb:green:wan";
-+	};
-+};
---- /dev/null
-+++ b/arch/arm/dts/rk3399-nanopi-r4s-4gb-u-boot.dtsi
-@@ -0,0 +1,9 @@
-+// SPDX-License-Identifier: GPL-2.0+
-+/*
-+ * (C) Copyright 2018-2019 Rockchip Electronics Co., Ltd
-+ * (C) Copyright 2020 Marty Jones <mj8263788@gmail.com>
-+ * (C) Copyright 2020 Tianling Shen <cnsztl@project-openwrt.eu.org>
-+ */
-+
-+#include "rk3399-nanopi4-u-boot.dtsi"
-+#include "rk3399-sdram-lpddr4-100.dtsi"
---- /dev/null
-+++ b/arch/arm/dts/rk3399-nanopi-r4s-4gb.dts
-@@ -0,0 +1,27 @@
-+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
-+
-+#include "rk3399-nanopi-r4s.dtsi"
-+
-+/ {
-+	model = "FriendlyElec NanoPi R4S (4GB)";
-+	compatible = "friendlyarm,nanopi-r4s-4gb", "rockchip,rk3399";
-+};
-+
-+&leds {
-+	/delete-node/ status;
-+
-+	lan_led: led-0 {
-+		gpios = <&gpio1 RK_PA1 GPIO_ACTIVE_HIGH>;
-+		label = "nanopi-r4s-4gb:green:lan";
-+	};
-+
-+	sys_led: led-1 {
-+ 		gpios = <&gpio0 RK_PB5 GPIO_ACTIVE_HIGH>;
-+		label = "nanopi-r4s-4gb:red:sys";
-+	};
-+
-+	wan_led: led-2 {
-+		gpios = <&gpio1 RK_PA0 GPIO_ACTIVE_HIGH>;
-+		label = "nanopi-r4s-4gb:green:wan";
-+	};
-+};
---- /dev/null
-+++ b/arch/arm/dts/rk3399-nanopi-r4s.dtsi
-@@ -0,0 +1,122 @@
-+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
-+/*
-+ * Copyright (c) 2020 Marty Jones <mj8263788@gmail.com>
-+ * Copyright (c) 2020 Tianling Shen <cnsztl@project-openwrt.eu.org>
-+ */
-+
-+/dts-v1/;
-+#include "rk3399-nanopi4.dtsi"
-+
-+/ {
-+	aliases {
-+		led-boot = &sys_led;
-+		led-failsafe = &sys_led;
-+		led-running = &sys_led;
-+		led-upgrade = &sys_led;
-+		ethernet1 = &r8169;
-+	};
-+
-+	vdd_5v: vdd-5v {
-+		compatible = "regulator-fixed";
-+		regulator-name = "vdd_5v";
-+		regulator-always-on;
-+		regulator-boot-on;
-+	};
-+
-+	fan: pwm-fan {
-+		compatible = "pwm-fan";
-+		/* FIXME: adjust leveles for the connected fan */
-+		cooling-levels = <0 12 18 255>;
-+		#cooling-cells = <2>;
-+		fan-supply = <&vdd_5v>;
-+		pwms = <&pwm1 0 50000 0>;
-+	};
-+};
-+
-+&cpu_thermal {
-+	trips {
-+		cpu_warm: cpu_warm {
-+			temperature = <55000>;
-+			hysteresis = <2000>;
-+			type = "active";
-+		};
-+
-+		cpu_hot: cpu_hot {
-+			temperature = <65000>;
-+			hysteresis = <2000>;
-+			type = "active";
-+		};
-+	};
-+
-+	cooling-maps {
-+		map2 {
-+			trip = <&cpu_warm>;
-+			cooling-device = <&fan THERMAL_NO_LIMIT 1>;
-+		};
-+
-+		map3 {
-+			trip = <&cpu_hot>;
-+			cooling-device = <&fan 2 THERMAL_NO_LIMIT>;
-+		};
-+	};
-+};
-+
-+&emmc_phy {
-+	status = "disabled";
-+};
-+
-+&fusb0 {
-+	status = "disabled";
-+};
-+
-+&leds_gpio {
-+	rockchip,pins =
-+		<0 RK_PB5 RK_FUNC_GPIO &pcfg_pull_none>,
-+		<1 RK_PA0 RK_FUNC_GPIO &pcfg_pull_none>,
-+		<1 RK_PA1 RK_FUNC_GPIO &pcfg_pull_none>;
-+};
-+
-+&pcie0 {
-+	max-link-speed = <1>;
-+	num-lanes = <1>;
-+	vpcie3v3-supply = <&vcc3v3_sys>;
-+
-+	pcie@0 {
-+		reg = <0x00000000 0 0 0 0>;
-+		#address-cells = <3>;
-+		#size-cells = <2>;
-+
-+		r8169: pcie@0,0 {
-+			reg = <0x000000 0 0 0 0>;
-+			local-mac-address = [ 00 00 00 00 00 00 ];
-+		};
-+	};
-+};
-+
-+&sdhci {
-+	status = "disabled";
-+};
-+
-+&sdio0 {
-+	status = "disabled";
-+};
-+
-+&sdmmc {
-+	host-index-min = <1>;
-+};
-+
-+&u2phy0_host {
-+	phy-supply = <&vdd_5v>;
-+};
-+
-+&u2phy1_host {
-+	status = "disabled";
-+};
-+
-+&usbdrd_dwc3_0 {
-+	dr_mode = "host";
-+};
-+
-+&vcc3v3_sys {
-+	vin-supply = <&vcc5v0_sys>;
-+};
---- a/board/rockchip/evb_rk3399/MAINTAINERS
-+++ b/board/rockchip/evb_rk3399/MAINTAINERS
-@@ -55,6 +55,20 @@ S:	Maintained
- F:	configs/nanopi-neo4-rk3399_defconfig
- F:	arch/arm/dts/rk3399-nanopi-neo4-u-boot.dtsi
- 
-+NANOPI-R4S-1GB
-+M:      Marty Jones <mj8263788@gmail.com>
-+M:      Tianling Shen <cnsztl@project-openwrt.eu.org>
-+S:      Maintained
-+F:      configs/nanopi-r4s-1gb-rk3399_defconfig
-+F:      arch/arm/dts/rk3399-nanopi-r4s-1gb-u-boot.dtsi
-+
-+NANOPI-R4S-4GB
-+M:      Marty Jones <mj8263788@gmail.com>
-+M:      Tianling Shen <cnsztl@project-openwrt.eu.org>
-+S:      Maintained
-+F:      configs/nanopi-r4s-4gb-rk3399_defconfig
-+F:      arch/arm/dts/rk3399-nanopi-r4s-4gb-u-boot.dtsi
-+
- ORANGEPI-RK3399
- M:	Jagan Teki <jagan@amarulasolutions.com>
- S:	Maintained
---- /dev/null
-+++ b/configs/nanopi-r4s-1gb-rk3399_defconfig
-@@ -0,0 +1,61 @@
-+CONFIG_ARM=y
-+CONFIG_ARCH_ROCKCHIP=y
-+CONFIG_SYS_TEXT_BASE=0x00200000
-+CONFIG_ENV_OFFSET=0x3F8000
-+CONFIG_ROCKCHIP_RK3399=y
-+CONFIG_TARGET_EVB_RK3399=y
-+CONFIG_NR_DRAM_BANKS=1
-+CONFIG_DEBUG_UART_BASE=0xFF1A0000
-+CONFIG_DEBUG_UART_CLOCK=24000000
-+CONFIG_DEBUG_UART=y
-+CONFIG_DEFAULT_FDT_FILE="rockchip/rk3399-nanopi-r4s-1gb.dtb"
-+CONFIG_DISPLAY_BOARDINFO_LATE=y
-+# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
-+CONFIG_SPL_STACK_R=y
-+CONFIG_SPL_STACK_R_MALLOC_SIMPLE_LEN=0x10000
-+CONFIG_TPL=y
-+CONFIG_CMD_BOOTZ=y
-+CONFIG_CMD_GPT=y
-+CONFIG_CMD_MMC=y
-+CONFIG_CMD_USB=y
-+# CONFIG_CMD_SETEXPR is not set
-+CONFIG_CMD_TIME=y
-+CONFIG_SPL_OF_CONTROL=y
-+CONFIG_DEFAULT_DEVICE_TREE="rk3399-nanopi-r4s-1gb"
-+CONFIG_OF_SPL_REMOVE_PROPS="pinctrl-0 pinctrl-names clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
-+CONFIG_ENV_IS_IN_MMC=y
-+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
-+CONFIG_ROCKCHIP_GPIO=y
-+CONFIG_SYS_I2C_ROCKCHIP=y
-+CONFIG_MMC_DW=y
-+CONFIG_MMC_DW_ROCKCHIP=y
-+CONFIG_MMC_SDHCI=y
-+CONFIG_MMC_SDHCI_ROCKCHIP=y
-+CONFIG_DM_ETH=y
-+CONFIG_ETH_DESIGNWARE=y
-+CONFIG_GMAC_ROCKCHIP=y
-+CONFIG_PMIC_RK8XX=y
-+CONFIG_REGULATOR_PWM=y
-+CONFIG_REGULATOR_RK8XX=y
-+CONFIG_PWM_ROCKCHIP=y
-+CONFIG_BAUDRATE=1500000
-+CONFIG_DEBUG_UART_SHIFT=2
-+CONFIG_SYSRESET=y
-+CONFIG_USB=y
-+CONFIG_USB_XHCI_HCD=y
-+CONFIG_USB_XHCI_DWC3=y
-+CONFIG_USB_EHCI_HCD=y
-+CONFIG_USB_EHCI_GENERIC=y
-+CONFIG_USB_KEYBOARD=y
-+CONFIG_USB_HOST_ETHER=y
-+CONFIG_USB_ETHER_ASIX=y
-+CONFIG_USB_ETHER_ASIX88179=y
-+CONFIG_USB_ETHER_MCS7830=y
-+CONFIG_USB_ETHER_RTL8152=y
-+CONFIG_USB_ETHER_SMSC95XX=y
-+CONFIG_DM_VIDEO=y
-+CONFIG_DISPLAY=y
-+CONFIG_VIDEO_ROCKCHIP=y
-+CONFIG_DISPLAY_ROCKCHIP_HDMI=y
-+CONFIG_SPL_TINY_MEMSET=y
-+CONFIG_ERRNO_STR=y
---- /dev/null
-+++ b/configs/nanopi-r4s-4gb-rk3399_defconfig
-@@ -0,0 +1,62 @@
-+CONFIG_ARM=y
-+CONFIG_ARCH_ROCKCHIP=y
-+CONFIG_SYS_TEXT_BASE=0x00200000
-+CONFIG_ENV_OFFSET=0x3F8000
-+CONFIG_ROCKCHIP_RK3399=y
-+CONFIG_TARGET_EVB_RK3399=y
-+CONFIG_NR_DRAM_BANKS=1
-+CONFIG_DEBUG_UART_BASE=0xFF1A0000
-+CONFIG_DEBUG_UART_CLOCK=24000000
-+CONFIG_DEBUG_UART=y
-+CONFIG_DEFAULT_FDT_FILE="rockchip/rk3399-nanopi-r4s-4gb.dtb"
-+CONFIG_DISPLAY_BOARDINFO_LATE=y
-+# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
-+CONFIG_SPL_STACK_R=y
-+CONFIG_SPL_STACK_R_MALLOC_SIMPLE_LEN=0x10000
-+CONFIG_TPL=y
-+CONFIG_CMD_BOOTZ=y
-+CONFIG_CMD_GPT=y
-+CONFIG_CMD_MMC=y
-+CONFIG_CMD_USB=y
-+# CONFIG_CMD_SETEXPR is not set
-+CONFIG_CMD_TIME=y
-+CONFIG_SPL_OF_CONTROL=y
-+CONFIG_DEFAULT_DEVICE_TREE="rk3399-nanopi-r4s-4gb"
-+CONFIG_OF_SPL_REMOVE_PROPS="pinctrl-0 pinctrl-names clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
-+CONFIG_ENV_IS_IN_MMC=y
-+CONFIG_SYS_RELOC_GD_ENV_ADDR=y
-+CONFIG_ROCKCHIP_GPIO=y
-+CONFIG_SYS_I2C_ROCKCHIP=y
-+CONFIG_MMC_DW=y
-+CONFIG_MMC_DW_ROCKCHIP=y
-+CONFIG_MMC_SDHCI=y
-+CONFIG_MMC_SDHCI_ROCKCHIP=y
-+CONFIG_DM_ETH=y
-+CONFIG_ETH_DESIGNWARE=y
-+CONFIG_GMAC_ROCKCHIP=y
-+CONFIG_PMIC_RK8XX=y
-+CONFIG_REGULATOR_PWM=y
-+CONFIG_REGULATOR_RK8XX=y
-+CONFIG_PWM_ROCKCHIP=y
-+CONFIG_RAM_RK3399_LPDDR4=y
-+CONFIG_BAUDRATE=1500000
-+CONFIG_DEBUG_UART_SHIFT=2
-+CONFIG_SYSRESET=y
-+CONFIG_USB=y
-+CONFIG_USB_XHCI_HCD=y
-+CONFIG_USB_XHCI_DWC3=y
-+CONFIG_USB_EHCI_HCD=y
-+CONFIG_USB_EHCI_GENERIC=y
-+CONFIG_USB_KEYBOARD=y
-+CONFIG_USB_HOST_ETHER=y
-+CONFIG_USB_ETHER_ASIX=y
-+CONFIG_USB_ETHER_ASIX88179=y
-+CONFIG_USB_ETHER_MCS7830=y
-+CONFIG_USB_ETHER_RTL8152=y
-+CONFIG_USB_ETHER_SMSC95XX=y
-+CONFIG_DM_VIDEO=y
-+CONFIG_DISPLAY=y
-+CONFIG_VIDEO_ROCKCHIP=y
-+CONFIG_DISPLAY_ROCKCHIP_HDMI=y
-+CONFIG_SPL_TINY_MEMSET=y
-+CONFIG_ERRNO_STR=y
-
diff --git a/package/boot/uboot-rockchip/patches/201-rockchip-rk3399-Add-Nanopi-R4S-board-support.patch b/package/boot/uboot-rockchip/patches/201-rockchip-rk3399-Add-Nanopi-R4S-board-support.patch
new file mode 100644
index 000000000..643a22191
--- /dev/null
+++ b/package/boot/uboot-rockchip/patches/201-rockchip-rk3399-Add-Nanopi-R4S-board-support.patch
@@ -0,0 +1,875 @@
+From c67c45a8b0ba053d4de64b1941c2199f751c40bf Mon Sep 17 00:00:00 2001
+From: jensen <jensenhuang@friendlyarm.com>
+Date: Sun, 20 Dec 2020 16:56:11 +0800
+Subject: [PATCH 2/2] rockchip: rk3399: Add Nanopi R4S board support
+
+Specification
+- Rockchip RK3399
+- LPDDR4 4GiB, 1GB DDR3-1866
+- SD card slot
+- RTL8211E 1Gbps
+- RTL8111H 1Gbps
+- USB 3.0 x2
+- USB Type C power
+
+Signed-off-by: jensen <jensenhuang@friendlyarm.com>
+---
+ arch/arm/dts/Makefile                      |   1 +
+ arch/arm/dts/rk3399-nanopi-r4s-u-boot.dtsi |   9 ++
+ arch/arm/dts/rk3399-nanopi-r4s.dts         | 114 +++++++++++++
+ arch/arm/mach-rockchip/rk3399/Kconfig      |   6 +
+ board/friendlyarm/nanopi4/Kconfig          |  15 ++
+ board/friendlyarm/nanopi4/MAINTAINERS      |   6 +
+ board/friendlyarm/nanopi4/Makefile         |   8 +
+ board/friendlyarm/nanopi4/README           | 122 ++++++++++++++
+ board/friendlyarm/nanopi4/hwrev.c          | 179 +++++++++++++++++++++
+ board/friendlyarm/nanopi4/hwrev.h          |  27 ++++
+ board/friendlyarm/nanopi4/nanopi4.c        | 148 +++++++++++++++++
+ configs/nanopi-r4s-rk3399_defconfig        |  63 ++++++++
+ drivers/clk/rockchip/clk_rk3399.c          |   2 +
+ include/configs/nanopi4.h                  |  23 +++
+ 14 files changed, 723 insertions(+)
+ create mode 100644 arch/arm/dts/rk3399-nanopi-r4s-u-boot.dtsi
+ create mode 100644 arch/arm/dts/rk3399-nanopi-r4s.dts
+ create mode 100644 board/friendlyarm/nanopi4/Kconfig
+ create mode 100644 board/friendlyarm/nanopi4/MAINTAINERS
+ create mode 100644 board/friendlyarm/nanopi4/Makefile
+ create mode 100644 board/friendlyarm/nanopi4/README
+ create mode 100644 board/friendlyarm/nanopi4/hwrev.c
+ create mode 100644 board/friendlyarm/nanopi4/hwrev.h
+ create mode 100644 board/friendlyarm/nanopi4/nanopi4.c
+ create mode 100644 configs/nanopi-r4s-rk3399_defconfig
+ create mode 100644 include/configs/nanopi4.h
+
+diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
+index f8f529435b..c4e3bb2217 100644
+--- a/arch/arm/dts/Makefile
++++ b/arch/arm/dts/Makefile
+@@ -131,6 +131,7 @@ dtb-$(CONFIG_ROCKCHIP_RK3399) += \
+ 	rk3399-nanopi-m4.dtb \
+ 	rk3399-nanopi-m4-2gb.dtb \
+ 	rk3399-nanopi-neo4.dtb \
++	rk3399-nanopi-r4s.dtb \
+ 	rk3399-orangepi.dtb \
+ 	rk3399-pinebook-pro.dtb \
+ 	rk3399-puma-haikou.dtb \
+diff --git a/arch/arm/dts/rk3399-nanopi-r4s-u-boot.dtsi b/arch/arm/dts/rk3399-nanopi-r4s-u-boot.dtsi
+new file mode 100644
+index 0000000000..9369a7022a
+--- /dev/null
++++ b/arch/arm/dts/rk3399-nanopi-r4s-u-boot.dtsi
+@@ -0,0 +1,9 @@
++// SPDX-License-Identifier: GPL-2.0+
++/*
++ * Copyright (C) 2019 Jagan Teki <jagan@amarulasolutions.com>
++ */
++
++#include "rk3399-nanopi4-u-boot.dtsi"
++#include "rk3399-sdram-lpddr4-100.dtsi"
++#include "rk3399-sdram-lpddr3-samsung-4GB-1866.dtsi"
++#include "rk3399-sdram-ddr3-1866.dtsi"
+diff --git a/arch/arm/dts/rk3399-nanopi-r4s.dts b/arch/arm/dts/rk3399-nanopi-r4s.dts
+new file mode 100644
+index 0000000000..3072880c77
+--- /dev/null
++++ b/arch/arm/dts/rk3399-nanopi-r4s.dts
+@@ -0,0 +1,114 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * FriendlyElec NanoPi R4S board device tree source
++ *
++ * Copyright (c) 2020 FriendlyElec Computer Tech. Co., Ltd.
++ * (http://www.friendlyarm.com)
++ *
++ * Copyright (c) 2018 Collabora Ltd.
++ * Copyright (c) 2019 Arm Ltd.
++ */
++
++/dts-v1/;
++#include "rk3399-nanopi4.dtsi"
++
++/ {
++	model = "FriendlyElec NanoPi R4S";
++	compatible = "friendlyarm,nanopi-r4s", "rockchip,rk3399";
++
++	vdd_5v: vdd-5v {
++		compatible = "regulator-fixed";
++		regulator-name = "vdd_5v";
++		regulator-always-on;
++		regulator-boot-on;
++	};
++
++	vcc5v0_usb1: vcc5v0-usb1 {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_usb1";
++		regulator-always-on;
++		regulator-boot-on;
++		vin-supply = <&vdd_5v>;
++	};
++
++	vcc5v0_usb2: vcc5v0-usb2 {
++		compatible = "regulator-fixed";
++		regulator-name = "vcc5v0_usb2";
++		regulator-always-on;
++		regulator-boot-on;
++		vin-supply = <&vdd_5v>;
++	};
++
++	fan: pwm-fan {
++		compatible = "pwm-fan";
++		/*
++		 * With 20KHz PWM and an EVERCOOL EC4007H12SA fan, these levels
++		 * work out to 0, ~1200, ~3000, and 5000RPM respectively.
++		 */
++		cooling-levels = <0 12 18 255>;
++		#cooling-cells = <2>;
++		fan-supply = <&vdd_5v>;
++		pwms = <&pwm1 0 50000 0>;
++	};
++};
++
++&cpu_thermal {
++	trips {
++		cpu_warm: cpu_warm {
++			temperature = <55000>;
++			hysteresis = <2000>;
++			type = "active";
++		};
++
++		cpu_hot: cpu_hot {
++			temperature = <65000>;
++			hysteresis = <2000>;
++			type = "active";
++		};
++	};
++
++	cooling-maps {
++		map2 {
++			trip = <&cpu_warm>;
++			cooling-device = <&fan THERMAL_NO_LIMIT 1>;
++		};
++
++		map3 {
++			trip = <&cpu_hot>;
++			cooling-device = <&fan 2 THERMAL_NO_LIMIT>;
++		};
++	};
++};
++
++&emmc_phy {
++	status = "disabled";
++};
++
++&fusb0 {
++	status = "disabled";
++};
++
++&pcie0 {
++	num-lanes = <1>;
++	vpcie3v3-supply = <&vcc3v3_sys>;
++};
++
++&sdhci {
++	status = "disabled";
++};
++
++&sdio0 {
++	status = "disabled";
++};
++
++&u2phy0_host {
++	phy-supply = <&vdd_5v>;
++};
++
++&u2phy1_host {
++	status = "disabled";
++};
++
++&vcc3v3_sys {
++	vin-supply = <&vcc5v0_sys>;
++};
+diff --git a/arch/arm/mach-rockchip/rk3399/Kconfig b/arch/arm/mach-rockchip/rk3399/Kconfig
+index 17628f9171..2a44aae43c 100644
+--- a/arch/arm/mach-rockchip/rk3399/Kconfig
++++ b/arch/arm/mach-rockchip/rk3399/Kconfig
+@@ -109,6 +109,11 @@ config TARGET_ROC_PC_RK3399
+ 	   * wide voltage input(5V-15V), dual cell battery
+ 	   * Wifi/BT accessible via expansion board M.2
+ 
++config TARGET_NANOPI4
++	bool "FriendlyElec NanoPi 4 Series"
++	help
++	  Support for FriendlyElec boards based on RK3399.
++
+ endchoice
+ 
+ config ROCKCHIP_BOOT_MODE_REG
+@@ -152,6 +157,7 @@ config SYS_BOOTCOUNT_ADDR
+ endif # BOOTCOUNT_LIMIT
+ 
+ source "board/firefly/roc-pc-rk3399/Kconfig"
++source "board/friendlyarm/nanopi4/Kconfig"
+ source "board/google/gru/Kconfig"
+ source "board/pine64/pinebook-pro-rk3399/Kconfig"
+ source "board/pine64/rockpro64_rk3399/Kconfig"
+diff --git a/board/friendlyarm/nanopi4/Kconfig b/board/friendlyarm/nanopi4/Kconfig
+new file mode 100644
+index 0000000000..f3f9dd7b56
+--- /dev/null
++++ b/board/friendlyarm/nanopi4/Kconfig
+@@ -0,0 +1,15 @@
++if TARGET_NANOPI4
++
++config SYS_BOARD
++	default "nanopi4"
++
++config SYS_VENDOR
++	default "friendlyarm"
++
++config SYS_CONFIG_NAME
++	default "nanopi4"
++
++config BOARD_SPECIFIC_OPTIONS
++	def_bool y
++
++endif
+diff --git a/board/friendlyarm/nanopi4/MAINTAINERS b/board/friendlyarm/nanopi4/MAINTAINERS
+new file mode 100644
+index 0000000000..b4c35701d6
+--- /dev/null
++++ b/board/friendlyarm/nanopi4/MAINTAINERS
+@@ -0,0 +1,6 @@
++NanoPi 4 Series
++M:      <support@friendlyarm.com>
++S:      Maintained
++F:      board/friendlyarm/nanopi4/
++F:      include/configs/nanopi4.h
++F:      configs/nanopi4_defconfig
+diff --git a/board/friendlyarm/nanopi4/Makefile b/board/friendlyarm/nanopi4/Makefile
+new file mode 100644
+index 0000000000..33a1466567
+--- /dev/null
++++ b/board/friendlyarm/nanopi4/Makefile
+@@ -0,0 +1,8 @@
++#
++# Copyright (C) Guangzhou FriendlyELEC Computer Tech. Co., Ltd.
++# (http://www.friendlyarm.com)
++#
++# SPDX-License-Identifier:     GPL-2.0+
++#
++
++obj-y	+= nanopi4.o hwrev.o
+diff --git a/board/friendlyarm/nanopi4/README b/board/friendlyarm/nanopi4/README
+new file mode 100644
+index 0000000000..c6f58203eb
+--- /dev/null
++++ b/board/friendlyarm/nanopi4/README
+@@ -0,0 +1,122 @@
++Introduction
++============
++
++RK3399 key features we might use in U-Boot:
++* CPU: ARMv8 64bit Big-Little architecture,
++*      Big: dual-core Cortex-A72
++*      Little: quad-core Cortex-A53
++* IRAM: 200KB
++* DRAM: 4GB-128MB dual-channel
++* eMMC: support eMMC 5.0/5.1, suport HS400, HS200, DDR50
++* SD/MMC: support SD 3.0, MMC 4.51
++* USB: USB3.0 type-C port *2 with dwc3 controller
++*      USB2.0 EHCI host port *2
++* Display: RGB/HDMI/DP/MIPI/EDP
++
++evb key features:
++* regulator: pwm regulator for CPU B/L
++* PMIC: rk808
++* debug console: UART2
++
++In order to support Arm Trust Firmware(ATF), we can use either SPL or
++miniloader from rockchip to do:
++* do DRAM init
++* load and verify ATF image
++* load and verify U-Boot image
++
++Here is the step-by-step to boot to U-Boot on rk3399.
++
++Get the Source and prebuild binary
++==================================
++
++  > mkdir ~/evb_rk3399
++  > cd ~/evb_rk3399
++  > git clone https://github.com/ARM-software/arm-trusted-firmware.git
++  > git clone https://github.com/rockchip-linux/rkbin.git
++  > git clone https://github.com/rockchip-linux/rkdeveloptool.git
++
++
++Compile ATF
++===========
++
++  > cd arm-trusted-firmware
++  > make realclean
++  > make CROSS_COMPILE=aarch64-linux-gnu- PLAT=rk3399 bl31
++
++  Get bl31.elf in this step, copy it to U-Boot root dir:
++  > cp build/rk3399/release/bl31/bl31.elf ../u-boot/
++
++  Or you can get the bl31.elf directly from Rockchip:
++  > cp rkbin/rk33/rk3399_bl31_v1.00.elf ../u-boot/bl31.elf
++
++
++Compile U-Boot
++==============
++
++  > cd ../u-boot
++  > export CROSS_COMPILE=aarch64-linux-gnu-
++  > make evb-rk3399_defconfig
++  for firefly-rk3399, use below instead:
++  > make firefly-rk3399_defconfig
++  > make
++  > make u-boot.itb
++
++  Get spl/u-boot-spl.bin and u-boot.itb in this step.
++
++Compile rkdeveloptool
++=====================
++
++Get rkdeveloptool installed on your Host in this step.
++
++Follow instructions in latest README, example:
++  > cd ../rkdeveloptool
++  > autoreconf -i
++  > ./configure
++  > make
++  > sudo make install
++
++Both origin binaries and Tool are ready now, choose either option 1 or
++option 2 to deploy U-Boot.
++
++Package the image
++=================
++
++Package the image for U-Boot SPL(option 1)
++--------------------------------
++  > cd ..
++  > tools/mkimage -n rk3399 -T rksd -d spl/u-boot-spl.bin idbspl.img
++
++  Get idbspl.img in this step.
++
++Package the image for Rockchip miniloader(option 2)
++------------------------------------------
++  > cd ..
++  > cp arm-trusted-firmware/build/rk3399/release/bl31.elf rkbin/rk33
++  > ./rkbin/tools/trust_merger rkbin/tools/RK3399TRUST.ini
++  > ./rkbin/tools/loaderimage --pack --uboot u-boot/u-boot-dtb.bin uboot.img
++
++  Get trust.img and uboot.img in this step.
++
++Flash the image to eMMC
++=======================
++
++Flash the image with U-Boot SPL(option 1)
++-------------------------------
++Power on(or reset with RESET KEY) with MASKROM KEY preesed, and then:
++  > rkdeveloptool db rkbin/rk33/rk3399_loader_v1.08.106.bin
++  > rkdeveloptool wl 64 u-boot/idbspl.img
++  > rkdeveloptool wl 0x4000 u-boot/u-boot.itb
++  > rkdeveloptool rd
++
++Flash the image with Rockchip miniloader(option 2)
++----------------------------------------
++Power on(or reset with RESET KEY) with MASKROM KEY preesed, and then:
++  > rkdeveloptool db rkbin/rk33/rk3399_loader_v1.08.106.bin
++  > rkdeveloptool ul rkbin/rk33/rk3399_loader_v1.08.106.bin
++  > rkdeveloptool wl 0x4000 u-boot/uboot.img
++  > rkdeveloptool wl 0x6000 u-boot/trust.img
++  > rkdeveloptool rd
++
++You should be able to get U-Boot log in console/UART2(baurdrate 1500000)
++For more detail, please reference to:
++http://opensource.rock-chips.com/wiki_Boot_option
+diff --git a/board/friendlyarm/nanopi4/hwrev.c b/board/friendlyarm/nanopi4/hwrev.c
+new file mode 100644
+index 0000000000..f91885fdad
+--- /dev/null
++++ b/board/friendlyarm/nanopi4/hwrev.c
+@@ -0,0 +1,179 @@
++// SPDX-License-Identifier: GPL-2.0+
++/*
++ * Copyright (c) 2020 FriendlyElec Computer Tech. Co., Ltd.
++ * (http://www.friendlyarm.com)
++ */
++
++#include <common.h>
++#include <dm.h>
++#include <linux/delay.h>
++#include <log.h>
++#include <asm/io.h>
++#include <asm/gpio.h>
++#include <asm/arch-rockchip/gpio.h>
++
++/*
++ * ID info:
++ *  ID : Volts : ADC value :   Bucket
++ *  ==   =====   =========   ===========
++ *   0 : 0.102V:        58 :    0 -   81
++ *   1 : 0.211V:       120 :   82 -  150
++ *   2 : 0.319V:       181 :  151 -  211
++ *   3 : 0.427V:       242 :  212 -  274
++ *   4 : 0.542V:       307 :  275 -  342
++ *   5 : 0.666V:       378 :  343 -  411
++ *   6 : 0.781V:       444 :  412 -  477
++ *   7 : 0.900V:       511 :  478 -  545
++ *   8 : 1.023V:       581 :  546 -  613
++ *   9 : 1.137V:       646 :  614 -  675
++ *  10 : 1.240V:       704 :  676 -  733
++ *  11 : 1.343V:       763 :  734 -  795
++ *  12 : 1.457V:       828 :  796 -  861
++ *  13 : 1.576V:       895 :  862 -  925
++ *  14 : 1.684V:       956 :  926 -  989
++ *  15 : 1.800V:      1023 :  990 - 1023
++ */
++static const int id_readings[] = {
++	 81, 150, 211, 274, 342, 411, 477, 545,
++	613, 675, 733, 795, 861, 925, 989, 1023
++};
++
++static int cached_board_id = -1;
++
++#define SARADC_BASE		0xFF100000
++#define SARADC_DATA		(SARADC_BASE + 0)
++#define SARADC_CTRL		(SARADC_BASE + 8)
++
++static u32 get_saradc_value(int chn)
++{
++	int timeout = 0;
++	u32 adc_value = 0;
++
++	writel(0, SARADC_CTRL);
++	udelay(2);
++
++	writel(0x28 | chn, SARADC_CTRL);
++	udelay(50);
++
++	timeout = 0;
++	do {
++		if (readl(SARADC_CTRL) & 0x40) {
++			adc_value = readl(SARADC_DATA) & 0x3FF;
++			goto stop_adc;
++		}
++
++		udelay(10);
++	} while (timeout++ < 100);
++
++stop_adc:
++	writel(0, SARADC_CTRL);
++
++	return adc_value;
++}
++
++static uint32_t get_adc_index(int chn)
++{
++	int i;
++	int adc_reading;
++
++	if (cached_board_id != -1)
++		return cached_board_id;
++
++	adc_reading = get_saradc_value(chn);
++	for (i = 0; i < ARRAY_SIZE(id_readings); i++) {
++		if (adc_reading <= id_readings[i]) {
++			debug("ADC reading %d, ID %d\n", adc_reading, i);
++			cached_board_id = i;
++			return i;
++		}
++	}
++
++	/* should die for impossible value */
++	return 0;
++}
++
++/*
++ * Board revision list: <GPIO4_D1 | GPIO4_D0>
++ *  0b00 - NanoPC-T4
++ *  0b01 - NanoPi M4
++ *
++ * Extended by ADC_IN4
++ * Group A:
++ *  0x04 - NanoPi NEO4
++ *  0x06 - SOC-RK3399
++ *  0x07 - SOC-RK3399 V2
++ *  0x09 - NanoPi R4S 1GB
++ *  0x0A - NanoPi R4S 4GB
++ *
++ * Group B:
++ *  0x21 - NanoPi M4 Ver2.0
++ *  0x22 - NanoPi M4B
++ */
++static int pcb_rev = -1;
++
++void bd_hwrev_init(void)
++{
++#define GPIO4_BASE	0xff790000
++	struct rockchip_gpio_regs *regs = (void *)GPIO4_BASE;
++
++#ifdef CONFIG_SPL_BUILD
++	struct udevice *dev;
++
++	if (uclass_get_device_by_driver(UCLASS_CLK,
++				DM_GET_DRIVER(clk_rk3399), &dev))
++		return;
++#endif
++
++	if (pcb_rev >= 0)
++		return;
++
++	/* D1, D0: input mode */
++	clrbits_le32(&regs->swport_ddr, (0x3 << 24));
++	pcb_rev = (readl(&regs->ext_port) >> 24) & 0x3;
++
++	if (pcb_rev == 0x3) {
++		/* Revision group A: 0x04 ~ 0x13 */
++		pcb_rev = 0x4 + get_adc_index(4);
++
++	} else if (pcb_rev == 0x1) {
++		int idx = get_adc_index(4);
++
++		/* Revision group B: 0x21 ~ 0x2f */
++		if (idx > 0) {
++			pcb_rev = 0x20 + idx;
++		}
++	}
++}
++
++#ifdef CONFIG_SPL_BUILD
++static struct board_ddrtype {
++	int rev;
++	const char *type;
++} ddrtypes[] = {
++	{ 0x00, "lpddr3-samsung-4GB-1866" },
++	{ 0x01, "lpddr3-samsung-4GB-1866" },
++	{ 0x04,   "ddr3-1866" },
++	{ 0x06,   "ddr3-1866" },
++	{ 0x07, "lpddr4-100"  },
++	{ 0x09,   "ddr3-1866" },
++	{ 0x0a, "lpddr4-100"  },
++	{ 0x21, "lpddr4-100"  },
++	{ 0x22,   "ddr3-1866" },
++};
++
++const char *rk3399_get_ddrtype(void) {
++	int i;
++
++	bd_hwrev_init();
++	printf("Board: rev%02x\n", pcb_rev);
++
++	for (i = 0; i < ARRAY_SIZE(ddrtypes); i++) {
++		if (ddrtypes[i].rev == pcb_rev)
++			return ddrtypes[i].type;
++	}
++
++	/* fallback to first subnode (ie, first included dtsi) */
++	return NULL;
++}
++#endif
++
+diff --git a/board/friendlyarm/nanopi4/hwrev.h b/board/friendlyarm/nanopi4/hwrev.h
+new file mode 100644
+index 0000000000..23b3c7a557
+--- /dev/null
++++ b/board/friendlyarm/nanopi4/hwrev.h
+@@ -0,0 +1,27 @@
++/*
++ * Copyright (C) Guangzhou FriendlyARM Computer Tech. Co., Ltd.
++ * (http://www.friendlyarm.com)
++ *
++ * This program is free software; you can redistribute it and/or
++ * modify it under the terms of the GNU General Public License
++ * as published by the Free Software Foundation; either version 2
++ * of the License, or (at your option) any later version.
++ *
++ * This program is distributed in the hope that it will be useful,
++ * but WITHOUT ANY WARRANTY; without even the implied warranty of
++ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
++ * GNU General Public License for more details.
++ *
++ * You should have received a copy of the GNU General Public License
++ * along with this program; if not, you can access it online at
++ * http://www.gnu.org/licenses/gpl-2.0.html.
++ */
++
++#ifndef __BD_HW_REV_H__
++#define __BD_HW_REV_H__
++
++extern void bd_hwrev_config_gpio(void);
++extern void bd_hwrev_init(void);
++extern u32 get_board_rev(void);
++
++#endif /* __BD_HW_REV_H__ */
+diff --git a/board/friendlyarm/nanopi4/nanopi4.c b/board/friendlyarm/nanopi4/nanopi4.c
+new file mode 100644
+index 0000000000..a140370ca2
+--- /dev/null
++++ b/board/friendlyarm/nanopi4/nanopi4.c
+@@ -0,0 +1,148 @@
++// SPDX-License-Identifier: GPL-2.0+
++/*
++ * Copyright (c) 2020 FriendlyElec Computer Tech. Co., Ltd.
++ * (http://www.friendlyarm.com)
++ */
++
++#include <common.h>
++#include <dm.h>
++#include <env.h>
++#include <hash.h>
++#include <linux/bitops.h>
++#include <i2c.h>
++#include <init.h>
++#include <net.h>
++#include <netdev.h>
++#include <syscon.h>
++#include <asm/arch-rockchip/bootrom.h>
++#include <asm/arch-rockchip/clock.h>
++#include <asm/arch-rockchip/grf_rk3399.h>
++#include <asm/arch-rockchip/hardware.h>
++#include <asm/arch-rockchip/misc.h>
++#include <asm/io.h>
++#include <asm/setup.h>
++#include <u-boot/sha256.h>
++
++#ifdef CONFIG_MISC_INIT_R
++static void setup_iodomain(void)
++{
++	struct rk3399_grf_regs *grf =
++	    syscon_get_first_range(ROCKCHIP_SYSCON_GRF);
++
++	/* BT565 and AUDIO is in 1.8v domain */
++	rk_setreg(&grf->io_vsel, BIT(0) | BIT(1));
++}
++
++static int __maybe_unused mac_read_from_generic_eeprom(u8 *addr)
++{
++	struct udevice *i2c_dev;
++	int ret;
++
++	/* Microchip 24AA02xxx EEPROMs with EUI-48 Node Identity */
++	ret = i2c_get_chip_for_busnum(2, 0x51, 1, &i2c_dev);
++	if (!ret)
++		ret = dm_i2c_read(i2c_dev, 0xfa, addr, 6);
++
++	return ret;
++}
++
++static void setup_macaddr(void)
++{
++#if CONFIG_IS_ENABLED(CMD_NET)
++	int ret;
++	const char *cpuid = env_get("cpuid#");
++	u8 hash[SHA256_SUM_LEN];
++	int size = sizeof(hash);
++	u8 mac_addr[6];
++	int from_eeprom = 0;
++	int lockdown = 0;
++
++#ifndef CONFIG_ENV_IS_NOWHERE
++	lockdown = env_get_yesno("lockdown") == 1;
++#endif
++	if (lockdown && env_get("ethaddr"))
++		return;
++
++	ret = mac_read_from_generic_eeprom(mac_addr);
++	if (!ret && is_valid_ethaddr(mac_addr)) {
++		eth_env_set_enetaddr("ethaddr", mac_addr);
++		from_eeprom = 1;
++	}
++
++	if (!cpuid) {
++		debug("%s: could not retrieve 'cpuid#'\n", __func__);
++		return;
++	}
++
++	ret = hash_block("sha256", (void *)cpuid, strlen(cpuid), hash, &size);
++	if (ret) {
++		debug("%s: failed to calculate SHA256\n", __func__);
++		return;
++	}
++
++	/* Copy 6 bytes of the hash to base the MAC address on */
++	memcpy(mac_addr, hash, 6);
++
++	/* Make this a valid MAC address and set it */
++	mac_addr[0] &= 0xfe;  /* clear multicast bit */
++	mac_addr[0] |= 0x02;  /* set local assignment bit (IEEE802) */
++
++	if (from_eeprom) {
++		eth_env_set_enetaddr("eth1addr", mac_addr);
++	} else {
++		eth_env_set_enetaddr("ethaddr", mac_addr);
++
++		if (lockdown && env_get("eth1addr"))
++			return;
++
++		/* Ugly, copy another 4 bytes to generate a similar address */
++		memcpy(mac_addr + 2, hash + 8, 4);
++		if (!memcmp(hash + 2, hash + 8, 4))
++			mac_addr[5] ^= 0xff;
++
++		eth_env_set_enetaddr("eth1addr", mac_addr);
++	}
++#endif
++
++	return;
++}
++
++int misc_init_r(void)
++{
++	const u32 cpuid_offset = 0x7;
++	const u32 cpuid_length = 0x10;
++	u8 cpuid[cpuid_length];
++	int ret;
++
++	setup_iodomain();
++
++	ret = rockchip_cpuid_from_efuse(cpuid_offset, cpuid_length, cpuid);
++	if (ret)
++		return ret;
++
++	ret = rockchip_cpuid_set(cpuid, cpuid_length);
++	if (ret)
++		return ret;
++
++	setup_macaddr();
++	bd_hwrev_init();
++
++	return 0;
++}
++#endif
++
++#ifdef CONFIG_SERIAL_TAG
++void get_board_serial(struct tag_serialnr *serialnr)
++{
++	char *serial_string;
++	u64 serial = 0;
++
++	serial_string = env_get("serial#");
++
++	if (serial_string)
++		serial = simple_strtoull(serial_string, NULL, 16);
++
++	serialnr->high = (u32)(serial >> 32);
++	serialnr->low = (u32)(serial & 0xffffffff);
++}
++#endif
+diff --git a/configs/nanopi-r4s-rk3399_defconfig b/configs/nanopi-r4s-rk3399_defconfig
+new file mode 100644
+index 0000000000..f1776eee73
+--- /dev/null
++++ b/configs/nanopi-r4s-rk3399_defconfig
+@@ -0,0 +1,63 @@
++CONFIG_ARM=y
++CONFIG_ARCH_ROCKCHIP=y
++CONFIG_SYS_TEXT_BASE=0x00200000
++CONFIG_NR_DRAM_BANKS=1
++CONFIG_ENV_OFFSET=0x3F8000
++CONFIG_ROCKCHIP_RK3399=y
++CONFIG_TARGET_NANOPI4=y
++CONFIG_DEBUG_UART_BASE=0xFF1A0000
++CONFIG_DEBUG_UART_CLOCK=24000000
++CONFIG_DEFAULT_DEVICE_TREE="rk3399-nanopi-r4s"
++CONFIG_DEBUG_UART=y
++CONFIG_DEFAULT_FDT_FILE="rockchip/rk3399-nanopi-r4s.dtb"
++CONFIG_MISC_INIT_R=y
++# CONFIG_SPL_RAW_IMAGE_SUPPORT is not set
++CONFIG_SPL_STACK_R=y
++CONFIG_SPL_STACK_R_MALLOC_SIMPLE_LEN=0x10000
++CONFIG_TPL=y
++CONFIG_CMD_BOOTZ=y
++CONFIG_CMD_GPT=y
++CONFIG_CMD_MMC=y
++CONFIG_CMD_USB=y
++# CONFIG_CMD_SETEXPR is not set
++CONFIG_CMD_TIME=y
++CONFIG_SPL_OF_CONTROL=y
++CONFIG_OF_SPL_REMOVE_PROPS="pinctrl-0 pinctrl-names clock-names interrupt-parent assigned-clocks assigned-clock-rates assigned-clock-parents"
++CONFIG_ENV_IS_IN_MMC=y
++CONFIG_SYS_RELOC_GD_ENV_ADDR=y
++CONFIG_SYS_MMC_ENV_DEV=1
++CONFIG_ROCKCHIP_GPIO=y
++CONFIG_SYS_I2C_ROCKCHIP=y
++CONFIG_MMC_DW=y
++CONFIG_MMC_DW_ROCKCHIP=y
++CONFIG_MMC_SDHCI=y
++CONFIG_MMC_SDHCI_ROCKCHIP=y
++CONFIG_DM_ETH=y
++CONFIG_ETH_DESIGNWARE=y
++CONFIG_GMAC_ROCKCHIP=y
++CONFIG_PMIC_RK8XX=y
++CONFIG_REGULATOR_PWM=y
++CONFIG_REGULATOR_RK8XX=y
++CONFIG_PWM_ROCKCHIP=y
++CONFIG_RAM_RK3399_LPDDR4=y
++CONFIG_BAUDRATE=1500000
++CONFIG_DEBUG_UART_SHIFT=2
++CONFIG_SYSRESET=y
++CONFIG_USB=y
++CONFIG_USB_XHCI_HCD=y
++CONFIG_USB_XHCI_DWC3=y
++CONFIG_USB_EHCI_HCD=y
++CONFIG_USB_EHCI_GENERIC=y
++CONFIG_USB_KEYBOARD=y
++CONFIG_USB_HOST_ETHER=y
++CONFIG_USB_ETHER_ASIX=y
++CONFIG_USB_ETHER_ASIX88179=y
++CONFIG_USB_ETHER_MCS7830=y
++CONFIG_USB_ETHER_RTL8152=y
++CONFIG_USB_ETHER_SMSC95XX=y
++CONFIG_DM_VIDEO=y
++CONFIG_DISPLAY=y
++CONFIG_VIDEO_ROCKCHIP=y
++CONFIG_DISPLAY_ROCKCHIP_HDMI=y
++CONFIG_SPL_TINY_MEMSET=y
++CONFIG_ERRNO_STR=y
+diff --git a/drivers/clk/rockchip/clk_rk3399.c b/drivers/clk/rockchip/clk_rk3399.c
+index 22c373a623..38975c0c65 100644
+--- a/drivers/clk/rockchip/clk_rk3399.c
++++ b/drivers/clk/rockchip/clk_rk3399.c
+@@ -1351,6 +1351,8 @@ static void rkclk_init(struct rockchip_cru *cru)
+ 		     pclk_div << PCLK_PERILP1_DIV_CON_SHIFT |
+ 		     hclk_div << HCLK_PERILP1_DIV_CON_SHIFT |
+ 		     HCLK_PERILP1_PLL_SEL_GPLL << HCLK_PERILP1_PLL_SEL_SHIFT);
++
++	rk3399_saradc_set_clk(cru, 1000000);
+ }
+ #endif
+ 
+diff --git a/include/configs/nanopi4.h b/include/configs/nanopi4.h
+new file mode 100644
+index 0000000000..a90f7a84d5
+--- /dev/null
++++ b/include/configs/nanopi4.h
+@@ -0,0 +1,23 @@
++/* SPDX-License-Identifier: GPL-2.0+ */
++/*
++ * Copyright (C) Guangzhou FriendlyELEC Computer Tech. Co., Ltd.
++ * (http://www.friendlyarm.com)
++ *
++ * (C) Copyright 2016 Rockchip Electronics Co., Ltd
++ */
++
++#ifndef __CONFIG_NANOPI4_H__
++#define __CONFIG_NANOPI4_H__
++
++#define ROCKCHIP_DEVICE_SETTINGS \
++		"stdin=serial,usbkbd\0" \
++		"stdout=serial,vidconsole\0" \
++		"stderr=serial,vidconsole\0"
++
++#include <configs/rk3399_common.h>
++
++#define SDRAM_BANK_SIZE			(2UL << 30)
++
++#define CONFIG_SERIAL_TAG
++
++#endif
+-- 
+2.25.1
+
diff --git a/target/linux/rockchip/Makefile b/target/linux/rockchip/Makefile
index d3608f5fb..35a25da9d 100644
--- a/target/linux/rockchip/Makefile
+++ b/target/linux/rockchip/Makefile
@@ -6,8 +6,9 @@ include $(TOPDIR)/rules.mk
 
 BOARD:=rockchip
 BOARDNAME:=Rockchip
-FEATURES:=ext4 audio usb usbgadget display gpio fpu rootfs-part boot-part squashfs
+FEATURES:=ext4 audio usb usbgadget display gpio fpu pci pcie rootfs-part boot-part squashfs
 SUBTARGETS:=armv8
+CPU_TYPE:=cortex-a53
 
 KERNEL_PATCHVER=5.4
 
diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
index 944a1a1d1..870b01fa2 100755
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/01_leds
@@ -9,12 +9,14 @@ boardname="${board##*,}"
 board_config_update
 
 case $board in
-friendlyarm,nanopi-r2s|\
-friendlyarm,nanopi-r4s-1gb|\
-friendlyarm,nanopi-r4s-4gb)
+friendlyarm,nanopi-r2s)
 	ucidef_set_led_netdev "wan" "WAN" "$boardname:green:wan" "eth0"
 	ucidef_set_led_netdev "lan" "LAN" "$boardname:green:lan" "eth1"
 	;;
+friendlyarm,nanopi-r4s)
+	ucidef_set_led_netdev "wan" "WAN" "wan_led" "eth0"
+	ucidef_set_led_netdev "lan" "LAN" "lan_led" "eth1"
+	;;
 esac
 
 board_config_flush
diff --git a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
index ab594324c..d8acaabe2 100755
--- a/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
+++ b/target/linux/rockchip/armv8/base-files/etc/board.d/02_network
@@ -9,8 +9,7 @@ rockchip_setup_interfaces()
 
 	case "$board" in
 	friendlyarm,nanopi-r2s|\
-	friendlyarm,nanopi-r4s-1gb|\
-	friendlyarm,nanopi-r4s-4gb)
+	friendlyarm,nanopi-r4s)
 		ucidef_set_interfaces_lan_wan 'eth1' 'eth0'
 		;;
 	*)
@@ -35,8 +34,7 @@ rockchip_setup_macs()
 
 	case "$board" in
 	friendlyarm,nanopi-r2s|\
-	friendlyarm,nanopi-r4s-1gb|\
-	friendlyarm,nanopi-r4s-4gb)
+	friendlyarm,nanopi-r4s)
 		wan_mac=$(nanopi_generate_mac)
 		lan_mac=$(macaddr_add "$wan_mac" +1)
 		;;
diff --git a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
index 688f23b02..9e4a4cf4f 100644
--- a/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
+++ b/target/linux/rockchip/armv8/base-files/etc/hotplug.d/net/40-net-smp-affinity
@@ -6,7 +6,7 @@ get_device_irq() {
 	local device="$1"
 
 	local line=$(grep -m 1 "${device}\$" /proc/interrupts)
-	echo $(echo ${line} | sed 's/:.*//')
+	echo ${line} | sed 's/:.*//'
 }
 
 set_interface_core() {
@@ -26,8 +26,7 @@ friendlyarm,nanopi-r2s)
 	set_interface_core 2 "eth0"
 	set_interface_core 4 "eth1" "xhci-hcd:usb3"
 	;;
-friendlyarm,nanopi-r4s-1gb|\
-friendlyarm,nanopi-r4s-4gb)
+friendlyarm,nanopi-r4s)
 	set_interface_core 10 "eth0"
 	set_interface_core 20 "eth1"
 	;;
diff --git a/target/linux/rockchip/image/armv8.mk b/target/linux/rockchip/image/armv8.mk
index 7b4dc09c6..28bf9e988 100644
--- a/target/linux/rockchip/image/armv8.mk
+++ b/target/linux/rockchip/image/armv8.mk
@@ -15,28 +15,6 @@ define Device/friendlyarm_nanopi-r2s
 endef
 TARGET_DEVICES += friendlyarm_nanopi-r2s
 
-define Device/friendlyarm_nanopi-r4s
-  DEVICE_VENDOR := FriendlyARM
-  DEVICE_MODEL := NanoPi R4S
-  SOC := rk3399
-  IMAGE/sysupgrade.img.gz := boot-common | boot-script nanopi-r4s | pine64-img | gzip | append-metadata
-  DEVICE_PACKAGES := kmod-r8169
-endef
-
-define Device/friendlyarm_nanopi-r4s-1gb
-  $(Device/friendlyarm_nanopi-r4s)
-  DEVICE_MODEL += 1GB
-  UBOOT_DEVICE_NAME := nanopi-r4s-1gb-rk3399
-endef
-TARGET_DEVICES += friendlyarm_nanopi-r4s-1gb
-
-define Device/friendlyarm_nanopi-r4s-4gb
-  $(Device/friendlyarm_nanopi-r4s)
-  DEVICE_MODEL += 4GB
-  UBOOT_DEVICE_NAME := nanopi-r4s-4gb-rk3399
-endef
-TARGET_DEVICES += friendlyarm_nanopi-r4s-4gb
-
 define Device/pine64_rockpro64
   DEVICE_VENDOR := Pine64
   DEVICE_MODEL := RockPro64
@@ -45,3 +23,13 @@ define Device/pine64_rockpro64
   IMAGE/sysupgrade.img.gz := boot-common | boot-script | pine64-img | gzip | append-metadata
 endef
 TARGET_DEVICES += pine64_rockpro64
+
+define Device/friendlyarm_nanopi-r4s
+  DEVICE_VENDOR := FriendlyARM
+  DEVICE_MODEL := NanoPi R4S
+  SOC := rk3399
+  UBOOT_DEVICE_NAME := nanopi-r4s-rk3399
+  IMAGE/sysupgrade.img.gz := boot-common | boot-script nanopi-r4s | pine64-img | gzip | append-metadata
+  DEVICE_PACKAGES := kmod-usb-net-rtl8152 kmod-r8168
+endef
+TARGET_DEVICES += friendlyarm_nanopi-r4s
diff --git a/target/linux/rockchip/patches-5.4/200-rockchip-rk3399-Add-support-for-FriendlyARM-NanoPi-R.patch b/target/linux/rockchip/patches-5.4/200-rockchip-rk3399-Add-support-for-FriendlyARM-NanoPi-R.patch
deleted file mode 100644
index c487e7438..000000000
--- a/target/linux/rockchip/patches-5.4/200-rockchip-rk3399-Add-support-for-FriendlyARM-NanoPi-R.patch
+++ /dev/null
@@ -1,226 +0,0 @@
-From e46d311ad024821f4c892fead65e5b157fb98a6b Mon Sep 17 00:00:00 2001
-From: Tianling Shen <cnsztl@project-openwrt.eu.org>
-Date: Sat, 19 Dec 2020 11:57:26 +0000
-Subject: [PATCH] rockchip: rk3399: Add support for FriendlyARM NanoPi R4S
-
-This adds support for the NanoPi R4S from FriendlyArm.
-
-Rockchip RK3399 SoC
-1GB DDR3 or 4GB LPDDR4 RAM
-Gigabit Ethernet (WAN)
-Gigabit Ethernet (PCIe) (LAN)
-USB 3.0 Host Port x 2
-MicroSD slot
-Reset button
-WAN - LAN - SYS LED
-
-Signed-off-by: Tianling Shen <cnsztl@project-openwrt.eu.org>
-Co-authored-by: Marty Jones <mj8263788@gmail.com>
-Signed-off-by: Marty Jones <mj8263788@gmail.com>
----
- arch/arm64/boot/dts/rockchip/Makefile         |   2 +
- .../dts/rockchip/rk3399-nanopi-r4s-1gb.dts    |  27 +
- .../dts/rockchip/rk3399-nanopi-r4s-4gb.dts    |  27 +
- .../boot/dts/rockchip/rk3399-nanopi-r4s.dtsi  | 122 ++++++++++++++++++
- 4 files changed, 178 insertions(+)
- create mode 100644 arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s-1gb.dts
- create mode 100644 arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s-4gb.dts
- create mode 100644 arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s.dtsi
-
---- a/arch/arm64/boot/dts/rockchip/Makefile
-+++ b/arch/arm64/boot/dts/rockchip/Makefile
-@@ -25,6 +25,8 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-leez-p710.dtb
- dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-nanopc-t4.dtb
- dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-nanopi-m4.dtb
- dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-nanopi-neo4.dtb
-+dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-nanopi-r4s-1gb.dtb
-+dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-nanopi-r4s-4gb.dtb
- dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-orangepi.dtb
- dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-puma-haikou.dtb
- dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-roc-pc.dtb
---- /dev/null
-+++ b/arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s-1gb.dts
-@@ -0,0 +1,27 @@
-+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
-+
-+#include "rk3399-nanopi-r4s.dtsi"
-+
-+/ {
-+	model = "FriendlyElec NanoPi R4S (1GB)";
-+	compatible = "friendlyarm,nanopi-r4s-1gb", "rockchip,rk3399";
-+};
-+
-+&leds {
-+	/delete-node/ status;
-+
-+	lan_led: led-0 {
-+		gpios = <&gpio1 RK_PA1 GPIO_ACTIVE_HIGH>;
-+		label = "nanopi-r4s-1gb:green:lan";
-+	};
-+
-+	sys_led: led-1 {
-+		gpios = <&gpio0 RK_PB5 GPIO_ACTIVE_HIGH>;
-+		label = "nanopi-r4s-1gb:red:sys";
-+	};
-+
-+	wan_led: led-2 {
-+		gpios = <&gpio1 RK_PA0 GPIO_ACTIVE_HIGH>;
-+		label = "nanopi-r4s-1gb:green:wan";
-+	};
-+};
---- /dev/null
-+++ b/arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s-4gb.dts
-@@ -0,0 +1,27 @@
-+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
-+
-+#include "rk3399-nanopi-r4s.dtsi"
-+
-+/ {
-+	model = "FriendlyElec NanoPi R4S (4GB)";
-+	compatible = "friendlyarm,nanopi-r4s-4gb", "rockchip,rk3399";
-+};
-+
-+&leds {
-+	/delete-node/ status;
-+
-+	lan_led: led-0 {
-+		gpios = <&gpio1 RK_PA1 GPIO_ACTIVE_HIGH>;
-+		label = "nanopi-r4s-4gb:green:lan";
-+	};
-+
-+	sys_led: led-1 {
-+		gpios = <&gpio0 RK_PB5 GPIO_ACTIVE_HIGH>;
-+		label = "nanopi-r4s-4gb:red:sys";
-+	};
-+
-+	wan_led: led-2 {
-+		gpios = <&gpio1 RK_PA0 GPIO_ACTIVE_HIGH>;
-+		label = "nanopi-r4s-4gb:green:wan";
-+	};
-+};
---- /dev/null
-+++ b/arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s.dtsi
-@@ -0,0 +1,122 @@
-+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
-+/*
-+ * Copyright (c) 2020 Marty Jones <mj8263788@gmail.com>
-+ * Copyright (c) 2020 Tianling Shen <cnsztl@project-openwrt.eu.org>
-+ */
-+
-+/dts-v1/;
-+#include "rk3399-nanopi4.dtsi"
-+
-+/ {
-+	aliases {
-+		led-boot = &sys_led;
-+		led-failsafe = &sys_led;
-+		led-running = &sys_led;
-+		led-upgrade = &sys_led;
-+		ethernet1 = &r8169;
-+	};
-+
-+	vdd_5v: vdd-5v {
-+		compatible = "regulator-fixed";
-+		regulator-name = "vdd_5v";
-+		regulator-always-on;
-+		regulator-boot-on;
-+	};
-+
-+	fan: pwm-fan {
-+		compatible = "pwm-fan";
-+		/* FIXME: adjust leveles for the connected fan */
-+		cooling-levels = <0 12 18 255>;
-+		#cooling-cells = <2>;
-+		fan-supply = <&vdd_5v>;
-+		pwms = <&pwm1 0 50000 0>;
-+	};
-+};
-+
-+&cpu_thermal {
-+	trips {
-+		cpu_warm: cpu_warm {
-+			temperature = <55000>;
-+			hysteresis = <2000>;
-+			type = "active";
-+		};
-+
-+		cpu_hot: cpu_hot {
-+			temperature = <65000>;
-+			hysteresis = <2000>;
-+			type = "active";
-+		};
-+	};
-+
-+	cooling-maps {
-+		map2 {
-+			trip = <&cpu_warm>;
-+			cooling-device = <&fan THERMAL_NO_LIMIT 1>;
-+		};
-+
-+		map3 {
-+			trip = <&cpu_hot>;
-+			cooling-device = <&fan 2 THERMAL_NO_LIMIT>;
-+		};
-+	};
-+};
-+
-+&emmc_phy {
-+	status = "disabled";
-+};
-+
-+&fusb0 {
-+	status = "disabled";
-+};
-+
-+&leds_gpio {
-+	rockchip,pins =
-+		<0 RK_PB5 RK_FUNC_GPIO &pcfg_pull_none>,
-+		<1 RK_PA0 RK_FUNC_GPIO &pcfg_pull_none>,
-+		<1 RK_PA1 RK_FUNC_GPIO &pcfg_pull_none>;
-+};
-+
-+&pcie0 {
-+	max-link-speed = <1>;
-+	num-lanes = <1>;
-+	vpcie3v3-supply = <&vcc3v3_sys>;
-+
-+	pcie@0 {
-+		reg = <0x00000000 0 0 0 0>;
-+		#address-cells = <3>;
-+		#size-cells = <2>;
-+
-+		r8169: pcie@0,0 {
-+			reg = <0x000000 0 0 0 0>;
-+			local-mac-address = [ 00 00 00 00 00 00 ];
-+		};
-+	};
-+};
-+
-+&sdhci {
-+	status = "disabled";
-+};
-+
-+&sdio0 {
-+	status = "disabled";
-+};
-+
-+&sdmmc {
-+	host-index-min = <1>;
-+};
-+
-+&u2phy0_host {
-+	phy-supply = <&vdd_5v>;
-+};
-+
-+&u2phy1_host {
-+	status = "disabled";
-+};
-+
-+&usbdrd_dwc3_0 {
-+	dr_mode = "host";
-+};
-+
-+&vcc3v3_sys {
-+	vin-supply = <&vcc5v0_sys>;
-+};
-
diff --git a/target/linux/rockchip/patches-5.4/300-mmc-core-set-initial-signal-voltage-on-power-off.patch b/target/linux/rockchip/patches-5.4/300-mmc-core-set-initial-signal-voltage-on-power-off.patch
new file mode 100644
index 000000000..223059127
--- /dev/null
+++ b/target/linux/rockchip/patches-5.4/300-mmc-core-set-initial-signal-voltage-on-power-off.patch
@@ -0,0 +1,32 @@
+From bee5e8e3f9c5c7437711d7be8b36e1091b371847 Mon Sep 17 00:00:00 2001
+From: Jonas Karlman <jonas@kwiboo.se>
+Date: Tue, 24 Jul 2018 15:50:06 +0200
+Subject: [PATCH] mmc: core: set initial signal voltage on power off
+
+Signed-off-by: jensen <jensenhuang@friendlyarm.com>
+---
+ drivers/mmc/core/core.c | 8 ++++++++
+ 1 file changed, 8 insertions(+)
+
+diff --git a/drivers/mmc/core/core.c b/drivers/mmc/core/core.c
+index 26644b7ec13e..94534bc40bae 100644
+--- a/drivers/mmc/core/core.c
++++ b/drivers/mmc/core/core.c
+@@ -1366,6 +1366,14 @@ void mmc_power_off(struct mmc_host *host)
+ 	if (host->ios.power_mode == MMC_POWER_OFF)
+ 		return;
+ 
++	mmc_set_initial_signal_voltage(host);
++
++	/*
++	 * This delay should be sufficient to allow the power supply
++	 * to reach the minimum voltage.
++	 */
++	mmc_delay(10);
++
+ 	mmc_pwrseq_power_off(host);
+ 
+ 	host->ios.clock = 0;
+-- 
+2.25.1
+
diff --git a/target/linux/rockchip/patches-5.4/301-mmc-add-new-binding-to-specify-host-min-index.patch b/target/linux/rockchip/patches-5.4/301-mmc-add-new-binding-to-specify-host-min-index.patch
new file mode 100644
index 000000000..38289496c
--- /dev/null
+++ b/target/linux/rockchip/patches-5.4/301-mmc-add-new-binding-to-specify-host-min-index.patch
@@ -0,0 +1,38 @@
+From 659b50d846a18a4999026e01fd10c2129d7a56db Mon Sep 17 00:00:00 2001
+From: jensen <jensenhuang@friendlyarm.com>
+Date: Mon, 24 Aug 2020 20:07:11 +0800
+Subject: [PATCH] mmc: add new binding to specify host min index
+
+Signed-off-by: jensen <jensenhuang@friendlyarm.com>
+---
+ drivers/mmc/core/host.c | 7 ++++++-
+ 1 file changed, 6 insertions(+), 1 deletion(-)
+
+diff --git a/drivers/mmc/core/host.c b/drivers/mmc/core/host.c
+index b3484def0a8b..9cb982bc2349 100644
+--- a/drivers/mmc/core/host.c
++++ b/drivers/mmc/core/host.c
+@@ -397,6 +397,7 @@ struct mmc_host *mmc_alloc_host(int extra, struct device *dev)
+ {
+ 	int err;
+ 	struct mmc_host *host;
++	u32 index_min = 0;
+ 
+ 	host = kzalloc(sizeof(struct mmc_host) + extra, GFP_KERNEL);
+ 	if (!host)
+@@ -405,7 +406,11 @@ struct mmc_host *mmc_alloc_host(int extra, struct device *dev)
+ 	/* scanning will be enabled when we're ready */
+ 	host->rescan_disable = 1;
+ 
+-	err = ida_simple_get(&mmc_host_ida, 0, 0, GFP_KERNEL);
++	device_property_read_u32(dev, "host-index-min", &index_min);
++	if (index_min > 0)
++		dev_dbg(dev, "alloc index from %d\n", index_min);
++
++	err = ida_simple_get(&mmc_host_ida, index_min, 0, GFP_KERNEL);
+ 	if (err < 0) {
+ 		kfree(host);
+ 		return NULL;
+-- 
+2.25.1
+
diff --git a/target/linux/rockchip/patches-5.4/302-arm64-dts-rockchip-Add-Nanopi-R4S-board-support.patch b/target/linux/rockchip/patches-5.4/302-arm64-dts-rockchip-Add-Nanopi-R4S-board-support.patch
new file mode 100644
index 000000000..73ba08827
--- /dev/null
+++ b/target/linux/rockchip/patches-5.4/302-arm64-dts-rockchip-Add-Nanopi-R4S-board-support.patch
@@ -0,0 +1,239 @@
+From 9dd819240ddbff440e758e5737cc425d06cf61d5 Mon Sep 17 00:00:00 2001
+From: jensen <jensenhuang@friendlyarm.com>
+Date: Sun, 20 Dec 2020 18:16:44 +0800
+Subject: [PATCH] arm64: dts: rockchip: Add Nanopi R4S board support
+
+Specification
+- Rockchip RK3399
+- LPDDR4 4GiB, 1GB DDR3-1866
+- SD card slot
+- RTL8211E 1Gbps
+- RTL8111H 1Gbps
+- USB 3.0 x2
+- USB Type C power
+
+Change-Id: I4de7f80c29cd9028ba99c56fbe9ac7f68cd356af
+Signed-off-by: jensen <jensenhuang@friendlyarm.com>
+---
+ arch/arm64/boot/dts/rockchip/Makefile         |   1 +
+ .../boot/dts/rockchip/rk3399-nanopi-r4s.dts   | 153 ++++++++++++++++++
+ .../boot/dts/rockchip/rk3399-nanopi4.dtsi     |  10 +-
+ 3 files changed, 161 insertions(+), 3 deletions(-)
+ create mode 100644 arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s.dts
+
+diff --git a/arch/arm64/boot/dts/rockchip/Makefile b/arch/arm64/boot/dts/rockchip/Makefile
+index 1f18a9392d15..5489c9db69b9 100644
+--- a/arch/arm64/boot/dts/rockchip/Makefile
++++ b/arch/arm64/boot/dts/rockchip/Makefile
+@@ -24,6 +24,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-leez-p710.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-nanopc-t4.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-nanopi-m4.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-nanopi-neo4.dtb
++dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-nanopi-r4s.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-orangepi.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-puma-haikou.dtb
+ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-roc-pc.dtb
+diff --git a/arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s.dts b/arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s.dts
+new file mode 100644
+index 000000000000..4d16bdb885b2
+--- /dev/null
++++ b/arch/arm64/boot/dts/rockchip/rk3399-nanopi-r4s.dts
+@@ -0,0 +1,153 @@
++// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
++/*
++ * FriendlyElec NanoPi R4S board device tree source
++ *
++ * Copyright (c) 2020 FriendlyElec Computer Tech. Co., Ltd.
++ * (http://www.friendlyarm.com)
++ *
++ * Copyright (c) 2018 Collabora Ltd.
++ */
++
++/dts-v1/;
++#include "rk3399-nanopi4.dtsi"
++
++/ {
++	model = "FriendlyElec NanoPi R4S";
++	compatible = "friendlyarm,nanopi-r4s", "rockchip,rk3399";
++
++	aliases {
++		ethernet1 = &r8169;
++	};
++
++	vdd_5v: vdd-5v {
++		compatible = "regulator-fixed";
++		regulator-name = "vdd_5v";
++		regulator-always-on;
++		regulator-boot-on;
++	};
++
++	fan: pwm-fan {
++		compatible = "pwm-fan";
++		/* FIXME: adjust leveles for the connected fan */
++		cooling-levels = <0 12 18 255>;
++		#cooling-cells = <2>;
++		fan-supply = <&vdd_5v>;
++		pwms = <&pwm1 0 50000 0>;
++	};
++};
++
++&cpu_thermal {
++	trips {
++		cpu_warm: cpu_warm {
++			temperature = <55000>;
++			hysteresis = <2000>;
++			type = "active";
++		};
++
++		cpu_hot: cpu_hot {
++			temperature = <65000>;
++			hysteresis = <2000>;
++			type = "active";
++		};
++	};
++
++	cooling-maps {
++		map2 {
++			trip = <&cpu_warm>;
++			cooling-device = <&fan THERMAL_NO_LIMIT 1>;
++		};
++
++		map3 {
++			trip = <&cpu_hot>;
++			cooling-device = <&fan 2 THERMAL_NO_LIMIT>;
++		};
++	};
++};
++
++&emmc_phy {
++	status = "disabled";
++};
++
++&fusb0 {
++	status = "disabled";
++};
++
++&keys {
++	button@1 {
++		debounce-interval = <50>;
++		gpios = <&gpio1 RK_PC6 GPIO_ACTIVE_LOW>;
++		label = "K1";
++		linux,code = <BTN_1>;
++		wakeup-source;
++	};
++};
++
++&key_pins {
++	rockchip,pins =
++		<0 RK_PA5 RK_FUNC_GPIO &pcfg_pull_up>,
++		<1 RK_PC6 RK_FUNC_GPIO &pcfg_pull_up>;
++};
++
++&leds {
++	lan_led: led-1 {
++		gpios = <&gpio1 RK_PA1 GPIO_ACTIVE_HIGH>;
++		label = "lan_led";
++	};
++
++	wan_led: led-2 {
++		gpios = <&gpio1 RK_PA0 GPIO_ACTIVE_HIGH>;
++		label = "wan_led";
++	};
++};
++
++&leds_gpio {
++	rockchip,pins =
++		<0 RK_PB5 RK_FUNC_GPIO &pcfg_pull_none>,
++		<1 RK_PA0 RK_FUNC_GPIO &pcfg_pull_none>,
++		<1 RK_PA1 RK_FUNC_GPIO &pcfg_pull_none>;
++};
++
++&pcie0 {
++	max-link-speed = <1>;
++	num-lanes = <1>;
++	vpcie3v3-supply = <&vcc3v3_sys>;
++
++	pcie@0 {
++		reg = <0x00000000 0 0 0 0>;
++		#address-cells = <3>;
++		#size-cells = <2>;
++
++		r8169: pcie@0,0 {
++			reg = <0x000000 0 0 0 0>;
++			local-mac-address = [ 00 00 00 00 00 00 ];
++		};
++	};
++};
++
++&sdhci {
++	status = "disabled";
++};
++
++&sdio0 {
++	status = "disabled";
++};
++
++&sdmmc {
++	host-index-min = <1>;
++};
++
++&u2phy0_host {
++	phy-supply = <&vdd_5v>;
++};
++
++&u2phy1_host {
++	status = "disabled";
++};
++
++&usbdrd_dwc3_0 {
++	dr_mode = "host";
++};
++
++&vcc3v3_sys {
++	vin-supply = <&vcc5v0_sys>;
++};
+diff --git a/arch/arm64/boot/dts/rockchip/rk3399-nanopi4.dtsi b/arch/arm64/boot/dts/rockchip/rk3399-nanopi4.dtsi
+index dd16c80d923e..092c10a27c20 100644
+--- a/arch/arm64/boot/dts/rockchip/rk3399-nanopi4.dtsi
++++ b/arch/arm64/boot/dts/rockchip/rk3399-nanopi4.dtsi
+@@ -78,11 +78,11 @@
+ 		regulator-name = "vbus_typec";
+ 	};
+ 
+-	gpio-keys {
++	keys: gpio-keys {
+ 		compatible = "gpio-keys";
+ 		autorepeat;
+ 		pinctrl-names = "default";
+-		pinctrl-0 = <&power_key>;
++		pinctrl-0 = <&key_pins>;
+ 
+ 		power {
+ 			debounce-interval = <100>;
+@@ -519,7 +519,7 @@
+ 	};
+ 
+ 	rockchip-key {
+-		power_key: power-key {
++		key_pins: key-pins {
+ 			rockchip,pins = <0 RK_PA5 RK_FUNC_GPIO &pcfg_pull_up>;
+ 		};
+ 	};
+@@ -685,10 +685,14 @@
+ };
+ 
+ &usbdrd_dwc3_0 {
++	snps,xhci-slow-suspend-quirk;
++	snps,xhci-trb-ent-quirk;
+ 	status = "okay";
+ };
+ 
+ &usbdrd_dwc3_1 {
++	snps,xhci-slow-suspend-quirk;
++	snps,xhci-trb-ent-quirk;
+ 	dr_mode = "host";
+ 	status = "okay";
+ };
+-- 
+2.25.1
+
-- 
2.24.3 (Apple Git-128)

